# Generated by Django 5.0 on 2024-01-28 20:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentioning', models.BooleanField(default=False, verbose_name='Работа без упоминания в конфе')),
                ('need_turett', models.BooleanField(default=False, verbose_name='Слать туреттные сообщения')),
                ('celebrate_bday', models.BooleanField(default=False, verbose_name='Поздравлять с Днём рождения')),
                ('recognize_voice',
                 models.BooleanField(default=True, verbose_name='Распозновать голосовые автоматически')),
            ],
            options={
                'verbose_name': 'Настройка чата',
                'verbose_name_plural': 'Настройки чатов',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform',
                 models.CharField(choices=[('TG', 'tg'), ('API', 'api')], max_length=20, verbose_name='Тип платформы')),
                ('user_id', models.CharField(max_length=127, verbose_name='ID пользователя')),
                ('nickname', models.CharField(blank=True, max_length=40, null=True, verbose_name='Никнейм')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['profile'],
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need_meme', models.BooleanField(default=False, verbose_name='Слать мемы по точному названию')),
                ('need_reaction', models.BooleanField(default=True, verbose_name='Реагировать на неверные команды')),
                ('use_swear', models.BooleanField(default=True, verbose_name='Использовать ругательства')),
                ('celebrate_bday', models.BooleanField(default=True, verbose_name='Поздравлять с Днём рождения')),
                ('show_birthday_year', models.BooleanField(default=True, verbose_name='Показывать год')),
            ],
            options={
                'verbose_name': 'Настройка профиля',
                'verbose_name_plural': 'Настройки профилей',
            },
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform',
                 models.CharField(choices=[('TG', 'tg'), ('API', 'api')], max_length=20, verbose_name='Тип платформы')),
                ('bot_id', models.CharField(max_length=20, verbose_name='ID бота')),
                ('name', models.CharField(max_length=40, verbose_name='Имя')),
                ('avatar', models.ImageField(blank=True, upload_to='bot/bot/avatar/', verbose_name='Аватар')),
            ],
            options={
                'verbose_name': 'Бот',
                'verbose_name_plural': 'Боты',
                'ordering': ['id'],
                'unique_together': {('bot_id', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform',
                 models.CharField(choices=[('TG', 'tg'), ('API', 'api')], max_length=20, verbose_name='Тип платформы')),
                ('chat_id', models.CharField(default='', max_length=20, verbose_name='ID чата')),
                ('name', models.CharField(blank=True, default='', max_length=256, verbose_name='Название')),
                ('is_banned', models.BooleanField(default=False, verbose_name='Забанен')),
                ('kicked', models.BooleanField(default=False, verbose_name='Бота кикнули')),
                ('settings',
                 models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat',
                                      to='bot.chatsettings', verbose_name='Настройки')),
            ],
            options={
                'verbose_name': 'Чат',
                'verbose_name_plural': 'Чаты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=40, null=True, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, max_length=40, null=True, verbose_name='Фамилия')),
                ('nickname_real', models.CharField(blank=True, max_length=40, verbose_name='Прозвище')),
                ('gender', models.CharField(blank=True, choices=[('1', 'женский'), ('2', 'мужской'), ('', 'не указан')],
                                            max_length=2, verbose_name='Пол')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('avatar', models.ImageField(blank=True, upload_to='bot/users/avatar/', verbose_name='Аватар')),
                ('api_token', models.CharField(blank=True, max_length=100, verbose_name='Токен для API')),
                ('chats', models.ManyToManyField(blank=True, related_name='users', to='bot.chat', verbose_name='Чаты')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
                'ordering': ['name', 'surname'],
            },
        ),
    ]
