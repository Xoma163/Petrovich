name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Apt dependencies
        run: |
          sudo apt-get install libpq-dev postgresql-12 postgresql-client python3-dev
          sudo pg_ctlcluster 12 main start
          sudo ln -s /tmp/.s.PGSQL.5432 /var/run/postgresql/.s.PGSQL.5432
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
#      - name: Run tests
#        env:
#          SECRET_KEY: d7e72d9c61c4774bc5024bdd1434b1b322c62404d01ebc968b
#          DEBUG: False
#        run: python manage.py migrate
      - name: Run tests
        env:
          SECRET_KEY: d7e72d9c61c4774bc5024bdd1434b1b322c62404d01ebc968b
          DEBUG: False
          TG_TOKEN: ''
          TG_BOT_LOGIN: ''
        run: |
          python manage.py test
      - name: Deploy on production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.SSH_PRODUCTION_FOLDER }}
            ./update_production.sh

#      - name: Send telegram message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TG_PETROVICH_CHAT }}
#          token: ${{ secrets.TG_PETROVICH_TOKEN }}
#          message: |
#            Сервер обновлён. Список коммитов:
#            ${{join(github.event.commits.*.message, ', ') }}
